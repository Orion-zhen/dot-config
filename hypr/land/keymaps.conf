# $HOME/.config/hypr/land/keymaps.conf
# key mapping for hyprland

# bind[options] = MODS, key, dispatcher, params
# options:
# r: 释放, 当松开按键时触发
# c: 点击
# g: 拖拽
# o: 长按
# e: 重复, 当按下按键期间一直重复
# m: 鼠标
# t: 透明, 不能被其他键位覆盖
# i: 忽略 MODS 键
# s: 分离, 任意可行 MODS 和可行 key 的组合都可以触发

$mainMod = SUPER
$terminal = wezterm
$fileBrowser = dolphin
$launcher = sherlock
# $launcher = rofi -show drun
# $launcher = caelestia shell drawers toggle launcher
$editor = code
$browser = zen
$settings = systemsettings
$lock = hyprlock
$scripts = $HOME/.config/hypr/scripts

# 基础
bind = $mainMod, Q, killactive
bind = $mainMod SHIFT, Q, exit
bind = $mainMod, E, exec, $fileBrowser
bind = $mainMod, space, togglefloating
# 切换全屏
bind = $mainMod, F, fullscreen, 0
# 最大化窗口
bind = $mainMod, M, fullscreen, 1
bind = $mainMod, R, exec, $launcher
# 切换显示桌面
bind = $mainMod, D, exec, bash $scripts/show-desktop.sh
# 更换壁纸
bind = $mainMod, P, exec, bash $scripts/change-hyprpaper.sh
# 屏幕截图
bind = $mainMod, X, exec, hyprshot-gui
bind = , Print, exec, hyprshot-gui

# 快捷启动
bind = $mainMod, T, exec, $terminal
bind = $mainMod, C, exec, $editor
bind = $mainMod, B, exec, $browser

# 剪切板
# for rofi
# bind = SUPER, V, exec, cliphist list | rofi -dmenu -i -p "(づ๑•ᴗ•๑)づ♡" | cliphist decode | wl-copy
# kitty + clipse
# bind = $mainMod, V, exec, kitty --class clipse -e clipse
# wezterm + clipse
bind = $mainMod, V, exec, wezterm start --class clipse clipse
# for wofi
# bind = $mainMod, V, exec, cliphist list | wofi --dmenu | cliphist decode | wl-copy
# for tofi
# bind = $mainMod, V, exec, cliphist list | tofi -dmenu | cliphist decode | wl-copy
# for dmenu
# bind = $mainMod, V, exec, cliphist list | dmenu | cliphist decode | wl-copy
bind = $mainMod, I, exec, $settings
bind = $mainMod, L, exec, $lock
# bind = $mainMod, P, pseudo # 不知道干啥的, 但先留着吧
bind = $mainMod, J, togglesplit # 切换分屏方式

# 切换焦点窗口, 
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
# vim 风格键位
bind = $mainMod SHIFT, H, movefocus, l
bind = $mainMod SHIFT, L, movefocus, r
bind = $mainMod SHIFT, K, movefocus, u
bind = $mainMod SHIFT, J, movefocus, d

# 窗口组(窗口堆叠)
bind = $mainMod, G, togglegroup
# 工作区内移动窗口
# 优先移动到窗口组内或者移出窗口组
bind = $mainMod SHIFT, left, movewindoworgroup, l
bind = $mainMod SHIFT, right, movewindoworgroup, r
bind = $mainMod SHIFT, up, movewindoworgroup, u
bind = $mainMod SHIFT, down, movewindoworgroup, d
# 智能切换窗口组或工作区
bind = $mainMod, Tab, exec, bash $scripts/smart-scroll.sh "forward"
bind = $mainMod SHIFT, Tab, exec, bash $scripts/smart-scroll.sh "back"
# 鼠标滚轮智能切换窗口组或工作区
bind = $mainMod, mouse_down, exec, bash $scripts/smart-scroll.sh "forward"
bind = $mainMod, mouse_up, exec, bash $scripts/smart-scroll.sh "back"

# 切换工作区
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# 跨工作区移动窗口
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# 鼠标操作
bindm = SUPER, mouse:272, movewindow
bindm = SUPER, mouse:273, resizewindow
bindm = SUPER, mouse:274, movewindow # 鼠标中键

# hyprexpo 插件:
# hyprpm add https://github.com/hyprwm/hyprland-plugins
# hyprpm enable hyprexpo
bind = SUPER, grave, hyprexpo:expo, toggle

# keyboard builtin keys
# audio
bind = , xf86audioraisevolume, exec, pamixer -i 5
bind = , xf86audiolowervolume, exec, pamixer -d 5
bind = , xf86audiomicmute, exec, pamixer --default-source -m
bind = , xf86audiomute, exec, pamixer -t
bind = , xf86audioplay, exec, playerctl play-pause
bind = , xf86audiopause, exec, playerctl play-pause
bind = , xf86audionext, exec, playerctl next
bind = , xf86audioprev, exec, playerctl previous
# light
bind = , xf86monbrightnessup, exec, brightnessctl set 5%+
bind = , xf86monbrightnessdown, exec, brightnessctl set 5%-

# alt-tab
submap=alttab
bind = ALT, tab, sendshortcut, , tab, class:(alttab)

bind = ALT SHIFT, tab, sendshortcut, shift, tab, class:(alttab)

bindrt = ALT, ALT_L, exec, bash $scripts/alttab/disable.sh ; hyprctl -q dispatch sendshortcut , return,class:(alttab)
bindrt = ALT SHIFT, ALT_L, exec, bash $scripts/alttab/disable.sh ; hyprctl -q dispatch sendshortcut , return,class:(alttab)
bind = ALT, Return, exec, bash $scripts/alttab/disable.sh ; hyprctl -q dispatch sendshortcut , return, class:(alttab)
bind = ALT SHIFT, Return, exec, bash $scripts/alttab/disable.sh ; hyprctl -q dispatch sendshortcut , return, class:(alttab)
bind = ALT, escape, exec, bash $scripts/alttab/disable.sh ; hyprctl -q dispatch sendshortcut , escape,class:(alttab)
bind = ALT SHIFT, escape, exec, bash $hypr/scripts/alttab/disable.sh ; hyprctl -q dispatch sendshortcut , escape,class:(alttab)
submap = reset
